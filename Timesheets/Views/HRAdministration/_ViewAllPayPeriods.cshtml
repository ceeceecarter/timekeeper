@model NM.Web.WebApplication.Timesheets.Models.ViewModel.HRAdminViewModel

@helper RenderPartColumn(DateTime startDate, DateTime endDate)
{
var displayDates = startDate.ToShortDateString() + "-" + endDate.ToShortDateString();
    @displayDates;
}

@using GridMvc.Html

<script type="text/javascript">

    var createPayPeriodSave = false;
    var editPayPeriodSave = false;

    $(document).ready(function () {

        $('#lnkHidePayPeriodCreateForm').click(function () {
            location.reload();
        });

        $('#mdPayPeriodEditor').on('hidden.bs.modal', function (obj) {
            if (editPayPeriodSave == true) {
                editPayPeriodSave = false;
                location.reload();
            }
        });

    });

    function RefreshPage()
    {
        location.reload();
    }

</script>

<div class="row">
    @*<div class="container-fluid">
        <div class="NmarqGrid-Header">
            <div class="pull-left">
                <b>Admin Panel</b>
            </div>
        </div>
        <div id="divCreateNewPayPeriod" class="well">
            <button id="btnCreateNewPayPeriod" type="submit" style=""><span class="glyphicon glyphicon-plus" style="color:blue">Create New Pay Period</span></button>

        </div>
        <br />
    </div>*@
    <div class="container-fluid">
        <div class="NmarqGrid-Header">
            <div class="pull-left"><b>Pay Periods</b></div><div class="pull-right" style="font:x-small;color:White;padding-right:2px"><b>Current Period: @Model.PayPeriodDisplayDates</b></div>
        </div>
        <div class="container-fluid well">
            <div class="row">
                <div class="col-md-3">
                    <div id="divYearHeader">
                        @Html.Label("Year:")
                    </div>
                </div>
                <div class="col-md-2">
                    <div>
                    </div>
                </div>
                <div class="col-md-7">
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    <div id="divYearHeader">
                        @Html.HiddenFor(m=> Model.WorkingWithYear, new { id="hfWorkingWithYear" })
                        @Html.DropDownListFor(m => Model.YearAndPayPeriod.CurrentYear, new SelectList(Model.PayrollYears, "Value", "Text", Model.YearAndPayPeriod.CurrentYear), new { id = "ddlYears", @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div>
                        @*<a id="lnkShowPayPeriodCreateForm" href="#" class="btn btn-info" onclick="return ShowIt()">
                            <span class="glyphicon glyphicon-plus" style="color:orangered"></span>&nbsp;Add Pay Period</a>*@
                        @Ajax.ActionLink("Add Pay Period", "AddNewPayPeriod", "HRAdministration", new AjaxOptions { UpdateTargetId = "myDisplayID", InsertionMode = InsertionMode.Replace }, new { id = "alAddNewPayPeriod", @class = "form-control btn btn-info", @onclick="ShowIt();" })
                    </div>
                </div>
                <div class="col-md-7">
                </div>
            </div>
            <div id="divPayPeriodCreateForm" class="container-fluid" style="display:none">
                <br />
                <div class="horizontal-line"></div>
                <br />

                <div class="NmarqGrid-Header">
                    <div class="pull-left"><b>Adding New Pay Period</b></div>
                    <div class="pull-right" style="border:none;border-collapse:collapse;">
                            @*<a id="lnkHidePayPeriodCreateForm" href="#" class="btn btn-info btn-sm NmarqGrid-btn" onclick="HideIt(); return false;">
                                X
                            </a>*@
                        <button class="btn btn-info btn-sm NmarqGrid-btn" onclick="HideIt(); return false;">X</button>
                    </div>
                </div>
                <div class="jumbotron">
                    <div id="myDisplayID"></div>
                </div>
                <br />
                <div class="horizontal-line"></div>
            </div>
            <br />
            <div class="col-sm-12">
                @if (Model.PayPeriods != null)
                {
                   @Html.Grid(Model.PayPeriods.OrderByDescending(i => i.dtmPeriodStart), "_Grid").Named("payPeriodGrid").Columns(col =>
              {
                  col.Add(m => m.PayPeriodID, true); //hidden
                  col.Add()
                      .Titled("Pay Period")
                      .Encoded(false)
                      .Sanitized(false)
                      .SetWidth(30)
                      .RenderValueAs(i => RenderPartColumn(i.dtmPeriodStart, i.dtmPeriodEnd))
                      .Filterable(true);
                  col.Add(m => m.txtStatus)
                      .Titled("Status")
                      .SetWidth(30);
                  col.Add()
                      .Encoded(false)
                      .Sanitized(false)
                      .SetWidth("10px")
                      .Titled("Edit")
                      .RenderValueAs(o => o.PayPeriodID != 0 ? Ajax.ActionLink(" ", "GetPayPeriod", "HRAdministration", new { PayPeriodId = o.PayPeriodID }, new AjaxOptions { HttpMethod = "POST", OnSuccess = "PopModal", UpdateTargetId = "divPayPeriodEditorPartialView", InsertionMode = InsertionMode.Replace }, new { id = "btnEditPayPeriod", @class = "glyphicon glyphicon-pencil", title="Edit this period" }).ToHtmlString() : null);
                  //col.Add()
                  //    .Encoded(false)
                  //    .Sanitized(false)
                  //    .SetWidth("10px")
                  //    .Titled("Remove")
                  //    .RenderValueAs(o => o.txtStatus != "Processed" ? Ajax.ActionLink(" ", "DeletePayPeriod", "HRAdministration", new { pPayPeriodId = o.PayPeriodID, pIndividualId = Model.AuthenticatedUser.IndividualID }, new AjaxOptions { Confirm="Delete the selected pay period?", OnSuccess="RefreshPage" }, new { id = "btnDeletePayPeriod", @class = "glyphicon glyphicon-trash", title="Period  will not be removed if timesheet hours exist!" }).ToHtmlString() : null);
              }).WithPaging(30).Sortable(true)
                }
            </div>
        </div>
    </div>
</div>

<!--START MODAL for Pay Period View-->
<div id="frmPayPeriodEditor">
    <div class="container-fluid">
        <div id="mdPayPeriodEditor" class="modal fade" role="dialog" aria-labelledby="basicModal" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content" style="background-color:#f25d55">
                    
                    <div class="modal-header">Pay Period</div>
                    
                    <div id="divPayPeriodEditorPartialView" class="modal-body">Body content here</div>
                    
                    <div class="modal-footer">

                    </div>

                </div>
            </div>
        </div>
    </div>
</div>
<!--END MODAL for Pay Period View-->

<!-- Begin Modal ==> Pay Period Employees role="dialog" aria-labelledby="basicModal" aria-hidden="true" -->
<div id="">
    <div class="container-fluid">
        <div id="mdPayPeriodEmployees" class="modal fade" data-backdrop="static">
            <div class="modal-dialog modal-x-lg">
                <div class="modal-content" style="background-color:#f25d55">
                    <div class="modal-header">Pay Period Employees</div>
                    <div id="divPayPeriodEmployees" class="modal-body">Body content here</div>
                    <div class="modal-footer">
                        <input id="btnPayPeriodEmployeesApprovedChecked" class="btn btn-info" type="button" value="Approve Checked" style="margin-left:3px;margin-right:3px;" />
                        <input id="btnClosePayPeriodEmployees" class="btn btn-info" type="button" value="Close" style="margin-left:3px;margin-right:3px;" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!--End Modal ==> Pay Period Employees -->

@*<div id="dialog" title="Contact form">
    <p><b>Are you sure you want to delete this pay period?</b></p>
</div>*@

<!--Begin Modal for Warning message-->
<div class="modal fade bs-modal-lg" id="mdPayPeriodWarning" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="background-color:#b50022">
            <div class="modal-header">
                <button id="btnCloseXPayPeriodWarning" type="button" class="close" data-target="#mdPayPeriodWarning">&times;</button>
                <h5 class="modal-title" style="color:#ffffff">Warning</h5>
            </div>
            <div class="modal-body" style="background-color:#ffffff">
                <div class="text-danger text-danger" id="dvPayPeriodWarning">
                    <h4 class="text-danger" id="h4PayPeriodWarning"></h4>
                </div>
            </div>
            <div class="modal-footer">
                <button id="btnClosePayPeriodWarning" type="button" class="btn btn-default" data-target="#mdPayPeriodWarning">Close</button>
            </div>
        </div>
    </div>
</div>
<!--End Modal for Warning message-->
<script type="text/javascript">
    //Handler for Approve Checked button
    $(function () {
        $("#btnPayPeriodEmployeesApprovedChecked").on('click', function (event) {
            event.preventDefault();

            var validateError = 0;
            var textMessageHtmlBegin = "<div><ul>";
            var textMessageHtmlContent = "";
            var textMessageHtmlEnd = "</ul></div>";

            var approverLoggedInUserEmployeeInfoId = $("#hfHRLoggedInUser_EmployeeInfoID").val();
                        
            var strList = "";
            $("input[class='cbSelect']:checked").each(function () {
                if (this.checked) { strList += this.id + ","; };
            });

            var selPayPeriodId = $('#hdPPEmployeePayPeriodId').val();
            
            //Property Name is the same the as the View Model class
            SelectedEmployeeViewModel = {};
            SelectedEmployeeViewModel.SelectedEmployeeIndividualIds = "";
            SelectedEmployeeViewModel.SelectedPayPeriodId = selPayPeriodId;       
            
            if (strList == null || strList == '') {
                validateError = 1;
                textMessageHtmlContent != "<li>Please select Non-Exempt Employee to Approve.</li>"
            }

            if (selPayPeriodId == null || selPayPeriodId == '') {
                validateError = 1;
                textMessageHtmlContent != "<li>Missing Pay Period.</li>"
            }

            if (approverLoggedInUserEmployeeInfoId == null || approverLoggedInUserEmployeeInfoId == '') {
                validateError = 1;
                textMessageHtmlContent != "<li>Missing Approver Employee Info Id.</li>"
            }

            if (validateError > 0) {
                var textHtml = textMessageHtmlBegin + textMessageHtmlContent + textMessageHtmlEnd;
                $("#h4PayPeriodWarning").empty();
                $("#h4PayPeriodWarning").html(textHtml);
                $('#mdPayPeriodWarning').modal('show');
                return false;
            }

            SelectedEmployeeViewModel.SelectedEmployeeIndividualIds = strList.substring(0, strList.lastIndexOf(','));
            var postData = JSON.stringify({ SelectedEmployees: SelectedEmployeeViewModel, ApproverEmployeeInfoID: approverLoggedInUserEmployeeInfoId })

            $.ajax({
                url: '@Url.Action("ApproveCheckedEmployees", "HRAdministration")',
                type: "POST",
                contentType: "application/json",
                dataType: "html",
                cache: false,
                data: postData,
                beforeSend: function (event) {
                    $.blockUI({
                        message: "<div><span class='glyphicon glyphicon-refresh spinning'></span><h4>Please wait while processing information...</h4></div>",
                        css: {
                            padding: "5px", '-webkit-border-radius': '10px', 'z-index': '9999999999', 'opacity': '2', '-moz-border-radius': '10px', cursor: 'default', width: '550px'
                        }
                    });
                },
                success: function (data) {
                    $('#divPayPeriodEmployees').empty();
                    $('#divPayPeriodEmployees').html(data);
                    $.unblockUI();
                }
            });
            return false;
        });
    });

    $(function () {
        $("#btnClosePayPeriodWarning").on('click', function (event) {
            event.preventDefault();
            $("#mdPayPeriodWarning").modal('hide');
        });
        $("#btnCloseXPayPeriodWarning").on('click', function (event) {
            event.preventDefault();
            $("#mdPayPeriodWarning").modal('hide');
        });
    });
    
    //Hide the View All Pay Periods grid
    $(document).ready(function () {
        $("#spanClosePayPeriod").on("click", function (event) {
            $("#dvTSDetailView").html("");
        });

        $("#spanClosePayPeriod").css('cursor', 'pointer');

        $("#btnClosePayPeriodEmployees").on('click', function (event) {
            $("#mdPayPeriodEmployees").modal('hide');
            $('.modal-backdrop').remove();
            $('#mdPayPeriodEditor').modal('show');
        });


        //$('#mdPayPeriodEmployees').on('hidden.bs.modal', function () {
        //    debugger;
        //    $('#mdPayPeriodEditor').modal('show');
        //})


        //Handler to save time entry changes
        $("#ddlYears").change(function (event) {
            event.preventDefault();
        
            alert($("#ddlYears").val());

            @*var postdata = $('#formEditTimeEntry').serialize();
            $.ajax({
                url: '@Url.Action("EditSave", "Timesheets")',
                type: "POST",
                cache: false,
                data: postdata, //{ id: hourId }
                success: function (data) {
                    $('#dvTSWeeklyView').html(data);
                    $("#dvTimeEntryEdit").empty();
                    $(".dvLoadingMessage").text("");
                }
            });*@
        });

        //$('#mdPayPeriodEmployees').on('shown.bs.modal', function (e) {
        //    $('#mdPayPeriodEditor').modal('hide');
        //})


        

        //OnRowSelect on the Pay Period grid
        //pageGrids.payPeriodGrid.onRowSelect(function (e) {

            

            //var payperiodId = e.row.PayPeriodID;

            //note: object name should be the same as the controller parameter
            //var postData = JSON.stringify({ PayPeriodId: payperiodId });

            //Get the modal dialog to confim deleting multiple time entries
            @*$.ajax({
                url: '@Url.Action("GetPayPeriod", "HRAdministration")',
                type: "POST",
                contentType: "application/json",
                dataType: "html",
                cache: false,
                data: postData,
                success: function (data) {
                    $("#divPayPeriodEditorPartialView").html(data);
                    $("#mdPayPeriodEditor").modal('show');
                }
            }).fail(function (jqXHR, textStatus, errorThrown) {
                var errors = $.parseJSON(errorThrown);
                alert("Delete Multiple Request failed: " + errors.Message);
                window.location.reload(true);
            });*@


        //});




    });

    function PopModal() {
        $("#mdPayPeriodEditor").modal('show');
    }

    function ShowIt() {
        $("#divPayPeriodCreateForm").show();
    }

    function HideIt() {
        $("#divPayPeriodCreateForm").hide();
        if (createPayPeriodSave == true) {
            createPayPeriodSave = false;
            location.reload();
        }
        else
        {
            return false;
        }
    }

    function PopDialog() {
        $("#dialog").dialog({
            modal: true,
            title: 'Delete Pay Period',
            zIndex: 10000,
            autoOpen: true,
            width: '300',
            resizable: false,
            buttons: {
                Yes: function () {                    
                     $(this).dialog("close");
                },
                No: function () {
                    $(this).dialog("close");
                }
            },
            close: function (event, ui) {
                //$(this).remove();
            }
        });
        return false;
    }
</script>