// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TimesheetTests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddEntryHyperlink = this.UITimesheetInternetExpWindow.UITimesheetDocument.UIAddEntryHyperlink;
            HtmlEdit uIInpAddTimeEntryEdit = this.UITimesheetInternetExpWindow.UITimesheetDocument.UIInpAddTimeEntryEdit;
            HtmlDiv uIItemPane = this.UITimesheetInternetExpWindow.UITimesheetDocument.UIItemPane;
            HtmlComboBox uISelectedHoursTypeComboBox = this.UITimesheetInternetExpWindow.UITimesheetDocument.UISelectedHoursTypeComboBox;
            #endregion

            // Click 'Add Entry' link
            Mouse.Click(uIAddEntryHyperlink, new Point(93, 16));

            // Click 'inpAddTimeEntry' text box
            Mouse.Click(uIInpAddTimeEntryEdit, new Point(76, 15));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover  pane at (1, 1)
            Mouse.Hover(uIItemPane, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Select 'Regular' in 'SelectedHoursType' combo box
            uISelectedHoursTypeComboBox.SelectedItem = this.RecordedMethod1Params.UISelectedHoursTypeComboBoxSelectedItem;
        }
        
        /// <summary>
        /// RecordedMethod2 - Use 'RecordedMethod2Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod2()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddEntryHyperlink = this.UITimesheetInternetExpWindow.UITimesheetDocument.UIAddEntryHyperlink;
            HtmlEdit uIInpAddTimeEntryEdit = this.UITimesheetInternetExpWindow.UITimesheetDocument.UIInpAddTimeEntryEdit;
            HtmlDiv uIItemPane = this.UITimesheetInternetExpWindow.UITimesheetDocument.UIItemPane;
            HtmlComboBox uISelectedHoursTypeComboBox = this.UITimesheetInternetExpWindow.UITimesheetDocument.UISelectedHoursTypeComboBox;
            HtmlHyperlink uIAddEntryHyperlink1 = this.UITimesheetInternetExpWindow.UITimesheetDocument1.UIAddEntryHyperlink;
            HtmlEdit uIInpAddTimeEntryEdit1 = this.UITimesheetInternetExpWindow.UITimesheetDocument1.UIInpAddTimeEntryEdit;
            HtmlDiv uIItemPane1 = this.UITimesheetInternetExpWindow.UITimesheetDocument1.UIItemPane;
            HtmlComboBox uISelectedHoursTypeComboBox1 = this.UITimesheetInternetExpWindow.UITimesheetDocument1.UISelectedHoursTypeComboBox;
            #endregion

            // Click 'Add Entry' link
            Mouse.Click(uIAddEntryHyperlink, new Point(93, 16));

            // Click 'inpAddTimeEntry' text box
            Mouse.Click(uIInpAddTimeEntryEdit, new Point(76, 15));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover  pane at (1, 1)
            Mouse.Hover(uIItemPane, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Select 'Regular' in 'SelectedHoursType' combo box
            uISelectedHoursTypeComboBox.SelectedItem = this.RecordedMethod2Params.UISelectedHoursTypeComboBoxSelectedItem;

            // Click 'Add Entry' link
            Mouse.Click(uIAddEntryHyperlink1, new Point(31, 11));

            // Click 'inpAddTimeEntry' text box
            Mouse.Click(uIInpAddTimeEntryEdit1, new Point(84, 23));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover  pane at (1, 1)
            Mouse.Hover(uIItemPane1, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Select 'Regular' in 'SelectedHoursType' combo box
            uISelectedHoursTypeComboBox1.SelectedItem = this.RecordedMethod2Params.UISelectedHoursTypeComboBoxSelectedItem1;
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public virtual RecordedMethod2Params RecordedMethod2Params
        {
            get
            {
                if ((this.mRecordedMethod2Params == null))
                {
                    this.mRecordedMethod2Params = new RecordedMethod2Params();
                }
                return this.mRecordedMethod2Params;
            }
        }
        
        public UITimesheetInternetExpWindow UITimesheetInternetExpWindow
        {
            get
            {
                if ((this.mUITimesheetInternetExpWindow == null))
                {
                    this.mUITimesheetInternetExpWindow = new UITimesheetInternetExpWindow();
                }
                return this.mUITimesheetInternetExpWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private RecordedMethod2Params mRecordedMethod2Params;
        
        private UITimesheetInternetExpWindow mUITimesheetInternetExpWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Select 'Regular' in 'SelectedHoursType' combo box
        /// </summary>
        public string UISelectedHoursTypeComboBoxSelectedItem = "Regular";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RecordedMethod2Params
    {
        
        #region Fields
        /// <summary>
        /// Select 'Regular' in 'SelectedHoursType' combo box
        /// </summary>
        public string UISelectedHoursTypeComboBoxSelectedItem = "Regular";
        
        /// <summary>
        /// Select 'Regular' in 'SelectedHoursType' combo box
        /// </summary>
        public string UISelectedHoursTypeComboBoxSelectedItem1 = "Regular";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITimesheetInternetExpWindow : BrowserWindow
    {
        
        public UITimesheetInternetExpWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Timesheet";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Timesheet");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UITimesheetDocument UITimesheetDocument
        {
            get
            {
                if ((this.mUITimesheetDocument == null))
                {
                    this.mUITimesheetDocument = new UITimesheetDocument(this);
                }
                return this.mUITimesheetDocument;
            }
        }
        
        public UITimesheetDocument1 UITimesheetDocument1
        {
            get
            {
                if ((this.mUITimesheetDocument1 == null))
                {
                    this.mUITimesheetDocument1 = new UITimesheetDocument1(this);
                }
                return this.mUITimesheetDocument1;
            }
        }
        #endregion
        
        #region Fields
        private UITimesheetDocument mUITimesheetDocument;
        
        private UITimesheetDocument1 mUITimesheetDocument1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITimesheetDocument : HtmlDocument
    {
        
        public UITimesheetDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Timesheet";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:35330/";
            this.WindowTitles.Add("Timesheet");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAddEntryHyperlink
        {
            get
            {
                if ((this.mUIAddEntryHyperlink == null))
                {
                    this.mUIAddEntryHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddEntryHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAddEntryHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddEntryHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddEntryHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Entry";
                    this.mUIAddEntryHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/";
                    this.mUIAddEntryHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddEntryHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://www.google.com/";
                    this.mUIAddEntryHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIAddEntryHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "aria-expanded=\"false\" href=\"http://www.g";
                    this.mUIAddEntryHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "6";
                    this.mUIAddEntryHyperlink.WindowTitles.Add("Timesheet");
                    #endregion
                }
                return this.mUIAddEntryHyperlink;
            }
        }
        
        public HtmlEdit UIInpAddTimeEntryEdit
        {
            get
            {
                if ((this.mUIInpAddTimeEntryEdit == null))
                {
                    this.mUIInpAddTimeEntryEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIInpAddTimeEntryEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "inpAddTimeEntry";
                    this.mUIInpAddTimeEntryEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIInpAddTimeEntryEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIInpAddTimeEntryEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIInpAddTimeEntryEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIInpAddTimeEntryEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "btn btn-default btn-link";
                    this.mUIInpAddTimeEntryEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"btn btn-default btn-link\" id=\"inp";
                    this.mUIInpAddTimeEntryEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "7";
                    this.mUIInpAddTimeEntryEdit.WindowTitles.Add("Timesheet");
                    #endregion
                }
                return this.mUIInpAddTimeEntryEdit;
            }
        }
        
        public HtmlDiv UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "modal-backdrop fade in";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"modal-backdrop fade in\"";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "92";
                    this.mUIItemPane.WindowTitles.Add("Timesheet");
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        
        public HtmlComboBox UISelectedHoursTypeComboBox
        {
            get
            {
                if ((this.mUISelectedHoursTypeComboBox == null))
                {
                    this.mUISelectedHoursTypeComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUISelectedHoursTypeComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ddlHourTypes";
                    this.mUISelectedHoursTypeComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "SelectedHoursType";
                    this.mUISelectedHoursTypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUISelectedHoursTypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUISelectedHoursTypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUISelectedHoursTypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "7";
                    this.mUISelectedHoursTypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "form-control";
                    this.mUISelectedHoursTypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"SelectedHoursType\" class=\"form-con";
                    this.mUISelectedHoursTypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "2";
                    this.mUISelectedHoursTypeComboBox.WindowTitles.Add("Timesheet");
                    #endregion
                }
                return this.mUISelectedHoursTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAddEntryHyperlink;
        
        private HtmlEdit mUIInpAddTimeEntryEdit;
        
        private HtmlDiv mUIItemPane;
        
        private HtmlComboBox mUISelectedHoursTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITimesheetDocument1 : HtmlDocument
    {
        
        public UITimesheetDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Timesheet";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Timesheets";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:35330/Timesheets";
            this.WindowTitles.Add("Timesheet");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAddEntryHyperlink
        {
            get
            {
                if ((this.mUIAddEntryHyperlink == null))
                {
                    this.mUIAddEntryHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddEntryHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAddEntryHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddEntryHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddEntryHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add Entry";
                    this.mUIAddEntryHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/";
                    this.mUIAddEntryHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddEntryHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://www.google.com/";
                    this.mUIAddEntryHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIAddEntryHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"http://www.google.com\" data-toggle";
                    this.mUIAddEntryHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "6";
                    this.mUIAddEntryHyperlink.WindowTitles.Add("Timesheet");
                    #endregion
                }
                return this.mUIAddEntryHyperlink;
            }
        }
        
        public HtmlEdit UIInpAddTimeEntryEdit
        {
            get
            {
                if ((this.mUIInpAddTimeEntryEdit == null))
                {
                    this.mUIInpAddTimeEntryEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIInpAddTimeEntryEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "inpAddTimeEntry";
                    this.mUIInpAddTimeEntryEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIInpAddTimeEntryEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIInpAddTimeEntryEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIInpAddTimeEntryEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIInpAddTimeEntryEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "btn btn-default btn-link";
                    this.mUIInpAddTimeEntryEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"btn btn-default btn-link\" id=\"inp";
                    this.mUIInpAddTimeEntryEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "7";
                    this.mUIInpAddTimeEntryEdit.WindowTitles.Add("Timesheet");
                    #endregion
                }
                return this.mUIInpAddTimeEntryEdit;
            }
        }
        
        public HtmlDiv UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "modal-backdrop fade in";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"modal-backdrop fade in\"";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "92";
                    this.mUIItemPane.WindowTitles.Add("Timesheet");
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        
        public HtmlComboBox UISelectedHoursTypeComboBox
        {
            get
            {
                if ((this.mUISelectedHoursTypeComboBox == null))
                {
                    this.mUISelectedHoursTypeComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUISelectedHoursTypeComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "ddlHourTypes";
                    this.mUISelectedHoursTypeComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "SelectedHoursType";
                    this.mUISelectedHoursTypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = null;
                    this.mUISelectedHoursTypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUISelectedHoursTypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUISelectedHoursTypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "7";
                    this.mUISelectedHoursTypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "form-control";
                    this.mUISelectedHoursTypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"SelectedHoursType\" class=\"form-con";
                    this.mUISelectedHoursTypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "2";
                    this.mUISelectedHoursTypeComboBox.WindowTitles.Add("Timesheet");
                    #endregion
                }
                return this.mUISelectedHoursTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAddEntryHyperlink;
        
        private HtmlEdit mUIInpAddTimeEntryEdit;
        
        private HtmlDiv mUIItemPane;
        
        private HtmlComboBox mUISelectedHoursTypeComboBox;
        #endregion
    }
}
